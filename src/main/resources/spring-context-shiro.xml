<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	   default-lazy-init="true">

	<description>Shiro Configuration</description>

	<!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:kite.properties" />

	<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
				/static/** = anon
				/userfiles/** = anon
				/tools/DimensionCodeController = anon
				${adminPath}/sys/user/infoCareStatus = anon
				${adminPath}/sys/user/validateLoginName = anon
				${adminPath}/sys/user/validateMobile = anon
				${adminPath}/sys/user/validateMobileExist = anon
				${adminPath}/sys/user/resetPassword = anon
				${adminPath}/sys/user/resetPasswordAjax = anon
				${adminPath}/sys/user/resetPasswordIndex = anon
				${adminPath}/sys/user/resetPasswordSmsIndex = anon
				${adminPath}/sys/user/openResetPassword = anon
				${adminPath}/sys/user/resetPasswordBySms = anon
				${adminPath}/sys/user/resetPasswordChoose = anon
				${adminPath}/sys/user/openIdentifyCode = anon

				${adminPath}/tools/sms/sendIdentifyCode = anon
				${adminPath}/sys/redis/get = anon

				${adminPath}/xw_qyh/loginKite/* = anon
				${adminPath}/xw_qyh/loginKite2 = anon
				${adminPath}/xw_qyh/loginKite3 = anon
				${adminPath}/xw_qyh/loginKite4 = anon
				${adminPath}/xw_qyh/loginCrm = anon
				${adminPath}/xw_qyh/loginKiteCrm = anon
				${adminPath}/xw_qyh/sendLoginUrl = anon
				${adminPath}/sys/user/autoLogin/* = anon

				${adminPath}/sys/register = anon
				${adminPath}/sys/register/registerUser = anon
				${adminPath}/sys/register/getRegisterCode = anon
				${adminPath}/sys/register/validateMobileCode = anon
				${adminPath}/soft/sysVersion/getAndroidVer = anon
				${adminPath}/soft/sysVersion/getIosVer = anon
				${adminPath}/cas = cas
				${adminPath}/login = authc
				/xw_qyh/hall/** = authc
				/xw_qyh/login/** = anon
				/xw_qyh/feixianghall/** = anon
				/xw_qyh/value_card/** = anon
				/rpc/login/** = anon
				/ehr/fielUpload/** = anon
				${adminPath}/logout = anon
				${adminPath}/** = user
				/xw_qyh/sendmessage = anon
				/xw_qyh/jsdkconfig/** = anon
				/act/rest/service/editor/** = perms[act:model:edit]
				/act/rest/service/model/** = perms[act:model:edit]
				/act/rest/service/** = user
				/ReportServer/** = user
				/ureport/** = anon
				/loginApi/** = anon

                /api/** = anon
				/api/moc/interface/** = anon


				/tencent/** =anon

				/mobile/** = anon
			</value>
		</constructor-arg>
	</bean>

	<!-- 安全认证过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!--<property name="loginUrl" value="${cas.server.url}?service=${cas.project.url}${adminPath}/cas" />-->
		<property name="loginUrl" value="${adminPath}/login" />
		<property name="successUrl" value="${adminPath}?login" />
		<property name="filters">
			<map>
				<entry key="cas" value-ref="casFilter"/>
				<entry key="authc" value-ref="formAuthenticationFilter"/>
			</map>
		</property>
		<property name="filterChainDefinitions">
			<ref bean="shiroFilterChainDefinitions"/>
		</property>
	</bean>

	<!-- CAS认证过滤器 -->
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
		<property name="failureUrl" value="${adminPath}/login"/>
	</bean>

	<!-- 定义Shiro安全管理配置 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="systemAuthorizingRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>

	<!-- 自定义会话管理配置 -->
	<bean id="sessionManager" class="com.kite.common.security.shiro.session.SessionManager">
		<property name="sessionDAO" ref="sessionDAO"/>
		<!-- 会话超时时间，单位：毫秒  -->
		<property name="globalSessionTimeout" value="${session.sessionTimeout}"/>
		<!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
		<property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
		<!--  		<property name="sessionValidationSchedulerEnabled" value="false"/> -->
		<property name="sessionValidationSchedulerEnabled" value="true"/>
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookieEnabled" value="true"/>

		<!-- 自定义session监听器   -->
		<property name="sessionListeners" ref="systemSessionListener" />
	</bean>

	<bean id="systemSessionListener" class="com.kite.modules.sys.security.SystemSessionListener"></bean>

	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="kite.session.id"/>
	</bean>

	<!-- 自定义Session存储容器 -->
	<!--<bean id="sessionDAO" class="com.kite.common.security.shiro.session.JedisSessionDAO">
		<property name="sessionIdGenerator" ref="idGen" />
		<property name="sessionKeyPrefix" value="${redis.keyPrefix}_session_" />
	</bean>-->
		<bean id="sessionDAO" class="com.kite.common.security.shiro.session.CacheSessionDAO">
            <property name="sessionIdGenerator" ref="idGen" />
            <property name="activeSessionsCacheName" value="activeSessionsCache" />
            <property name="cacheManager" ref="shiroCacheManager" />
        </bean>

	<!-- 定义授权缓存管理器 -->
	<!-- 	<bean id="shiroCacheManager" class="com.kite.common.security.shiro.cache.SessionCacheManager" /> -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="cacheManager"/>
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>

</beans>