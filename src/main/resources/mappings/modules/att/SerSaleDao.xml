<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kite.modules.att.dao.SerSaleDao">

	<sql id="serSaleColumns">
		a.id AS "id",
		a.code AS "code",
		a.courseCode AS "courseCode",
		a.studentCode AS "studentCode",
		a.discount AS "discount",
		a.payAmount AS "payAmount",
		a.paid_flag AS "paidFlag",
		a.paid_date AS "paidDate",
		a.paymentType AS "paymentType",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.memberFee_flag AS "memberFeeFlag"
	</sql>

	<sql id="serSaleJoins">

	</sql>


	<select id="get" resultType="SerSale" >
		SELECT
			<include refid="serSaleColumns"/>
		FROM ser_sale a
		<include refid="serSaleJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="SerSale" >
		SELECT
			concat(sbt.nameCn,"(",sbt.nameEn,")") as studentName,
			<include refid="serSaleColumns"/>
		FROM ser_sale a
		left join sys_base_student sbt on sbt.code = a.studentCode and sbt.del_flag = 0
		<include refid="serSaleJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}

			<if test="code != null and code != ''">
				and a.code like concat('%',#{code},'%')
			</if>

			<if test="studentCode != null and studentCode != ''">
				and a.studentCode like concat('%',#{studentCode},'%')
			</if>

			<if test="paidFlag != null and paidFlag != ''">
				and a.paid_flag = #{paidFlag}
			</if>
			<if test="memberFeeFlag != null and memberFeeFlag != ''">
				and a.memberFee_flag = #{memberFeeFlag}
			</if>

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="SerSale" >
		SELECT
			concat(sbt.nameCn,"(",sbt.nameEn,")") as studentName,
			<include refid="serSaleColumns"/>
		FROM ser_sale a
		left join sys_base_student sbt on sbt.code = a.studentCode and sbt.del_flag = 0
		<include refid="serSaleJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO ser_sale(
			id,
			code,
			courseCode,
			studentCode,
			discount,
			payAmount,
			paid_flag,
			paid_date,
			paymentType,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			memberFee_flag
		) VALUES (
			#{id},
			#{code},
			#{courseCode},
			#{studentCode},
			#{discount},
			#{payAmount},
			#{paidFlag},
			#{paidDate},
			#{paymentType},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{memberFeeFlag}
		)
	</insert>

	<update id="update">
		UPDATE ser_sale SET
			code = #{code},
			courseCode = #{courseCode},
			studentCode = #{studentCode},
			discount = #{discount},
			payAmount = #{payAmount},
			paid_flag = #{paidFlag},
			paid_date = #{paidDate},
			paymentType = #{paymentType},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			memberFee_flag = #{memberFeeFlag}
		WHERE id = #{id}
	</update>


	<!--物理删除-->
	<update id="delete">
		DELETE FROM ser_sale
		WHERE id = #{id}
	</update>

	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE ser_sale SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="SerSale" statementType="STATEMENT">
		select * FROM ser_sale  where ${propertyName} = '${value}'
	</select>


	<select id="findStudentCount" resultType="Integer">
		select count(1)
		FROM ser_sale a
		where a.create_date BETWEEN #{beginTime} and #{endTime}
	</select>

</mapper>