<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kite.modules.att.dao.SerGroupDao">

	<sql id="serGroupColumns">
		a.id AS "id",
		a.code AS "code",
		a.coathId AS "coathId",
		a.courseAddress AS "courseAddress",
		a.group_beginTime AS "groupBeginTime",
		a.group_learn_beginTime AS "groupLearnBeginTime",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>

	<sql id="serGroupJoins">
	</sql>


	<select id="get" resultType="SerGroup" >
		SELECT
			<include refid="serGroupColumns"/>
		FROM ser_group a
		<include refid="serGroupJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="SerGroup" >
		SELECT
			<include refid="serGroupColumns"/>
		FROM ser_group a
		<include refid="serGroupJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="code != null and code != ''">
				AND a.code = #{code}
			</if>
			<if test="coathId != null and coathId != ''">
				AND a.coathId = #{coathId}
			</if>
			<if test="courseAddress != null and courseAddress != ''">
				AND a.courseAddress = #{courseAddress}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="SerGroup" >
		SELECT
			<include refid="serGroupColumns"/>
		FROM ser_group a
		<include refid="serGroupJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO ser_group(
			id,
			code,
			coathId,
			courseAddress,
			group_beginTime,
			group_learn_beginTime,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{code},
			#{coathId},
			#{courseAddress},
			#{groupBeginTime},
			#{groupLearnBeginTime},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE ser_group SET
			code = #{code},
			coathId = #{coathId},
			courseAddress = #{courseAddress},
			group_beginTime = #{groupBeginTime},
			group_learn_beginTime = #{groupLearnBeginTime},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>


	<!--物理删除-->
	<update id="delete">
		DELETE FROM ser_group
		WHERE id = #{id}
	</update>

	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE ser_group SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="SerGroup" statementType="STATEMENT">
		select * FROM ser_group  where ${propertyName} = '${value}'
	</select>

	<select id="findSerGroupListByAddressAndBeginTime" resultType="SerGroup">
		select <include refid="serGroupColumns"/>
		FROM ser_group a
		<include refid="serGroupJoins"/>
		where a.courseAddress = #{courseAddress} and a.group_learn_beginTime = #{groupLearnBeginTime}
		and a.del_flag = '0'
	</select>

	<select id="findSerGroupByAddressNum" resultType="Integer">
		select count(1)
		FROM ser_group a
		where a.courseAddress = #{courseAddress}
		and a.del_flag = '0'
	</select>

	<select id="findSerGroupByCode" resultType="SerGroup">
		select <include refid="serGroupColumns"/>
		FROM ser_group a
		<include refid="serGroupJoins"/>
		where a.code = #{code}
		and a.del_flag = '0'
	</select>

	<select id="findCodesByCondition" resultType="com.kite.modules.att.command.GroupDetailsInfo">
		select
			gr.`code` AS "code",
			gr.courseAddress AS "courseAddress",
			gr.group_beginTime AS "groupBeginTime",
			gr.group_learn_beginTime AS "groupLearnBeginTime",
			dict.label AS "courseAddressName",
			coach.nameCn AS "coachName"
			FROM ser_group gr
			LEFT JOIN sys_dict dict on dict.`value` = gr.courseAddress and dict.type = 'course_addrese_flag' and dict.del_flag = '0'
			LEFT JOIN sys_base_coach coach on coach.id = gr.coathId and coach.del_flag = '0'
			where gr.courseAddress = #{addressStr}
			and gr.group_learn_beginTime = #{learnBeginStr}
			and gr.group_beginTime BETWEEN #{groupBeginDateTime} and #{groupEndDateTime}
			and gr.del_flag = '0'
	</select>

	<select id="findGroupSaleNum" resultType="Integer">
		select COUNT(1)
		from ser_group gr
		LEFT JOIN ser_group_details details on details.groupId = gr.id
		where gr.`code` = #{code}
	</select>

</mapper>