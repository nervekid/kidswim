<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kite.modules.sys.dao.UserDao">

	<!-- <resultMap id="userResult" type="User">
		<id property="id" column="id" />
		<result property="company.id" column="company.id" />
		<result property="office.id" column="office.id" />
		<result property="loginName" column="login_name" />
		<result property="password" column="password" />
		<result property="no" column="no" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
		<result property="mobile" column="mobile" />
		<result property="userType" column="user_type" />
		<result property="loginIp" column="login_ip" />
		<result property="loginDate" column="login_date" />
		<result property="remarks" column="remarks" />
		<result property="loginFlag" column="loginFlag" />
		<result property="photo" column="photo" />
		<result property="createBy.id" column="createBy.id" />
		<result property="createDate" column="create_date" />
		<result property="updateBy.id" column="updateBy.id" />
		<result property="updateDate" column="update_date" />
		<result property="company.name" column="company.name" />
		<result property="company.parentId" column="company.parentId" />
		<result property="company.parentIds" column="company.parentIds" />
		<result property="company.area.id" column="company.area.id" />
		<result property="company.area.name" column="company.area.name" />
		<result property="company.area.parentId" column="company.area.parentId" />
		<result property="company.area.parentIds" column="company.area.parentIds" />
		<result property="company.primaryPerson.id" column="company.primaryPerson.id" />
		<result property="company.primaryPerson.name" column="company.primaryPerson.name" />
		<result property="company.deputyPerson.id" column="company.deputyPerson.id" />
		<result property="company.deputyPerson.name" column="company.deputyPerson.name" />
		<result property="office.name" column="office.name" />
		<result property="office.parentId" column="office.parentId" />
		<result property="office.parentIds" column="office.parentIds" />
		<result property="office.area.id" column="office.area.id" />
		<result property="office.area.name" column="office.area.name" />
		<result property="office.area.parentId" column="office.area.parentId" />
		<result property="office.area.parentIds" column="office.area.parentIds" />
		<result property="office.primaryPerson.id" column="office.primaryPerson.id" />
		<result property="office.primaryPerson.name" column="office.primaryPerson.name" />
		<result property="office.deputyPerson.id" column="office.deputyPerson.id" />
		<result property="office.deputyPerson.name" column="office.deputyPerson.name" />
		<collection property="roleList" ofType="Role">
			<id property="id" column="roleList.id" />
			<result property="office.id" column="roleList.office.id" />
			<result property="name" column="roleList.name" />
			<result property="enname" column="roleList.enname" />
			<result property="roleType" column="roleList.roleType" />
			<result property="dataScope" column="roleList.dataScope" />
			<collection property="officeList" ofType="Office">
				<id property="id" column="roleList.officeList.id" />
			</collection>
		</collection>
	</resultMap> -->

    <sql id="userColumns">
    	a.id,
    	a.company_id AS "company.id",
    	a.office_id AS "office.id",
    	a.login_name,
    	a.password,
    	a.no,
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.user_type,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.login_flag,
		a.photo,
		a.qrcode,
		a.sign,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
		a.formal_flag,
    	c.name AS "company.name",
    	c.parent_id AS "company.parent.id",
    	c.parent_ids AS "company.parentIds",
    	ca.id AS "company.area.id",
    	ca.name AS "company.area.name",
    	ca.parent_id AS "company.area.parent.id",
    	ca.parent_ids AS "company.area.parentIds",
    	o.name AS "office.name",
    	o.parent_id AS "office.parent.id",
    	o.parent_ids AS "office.parentIds",
    	oa.id AS "office.area.id",
    	oa.name AS "office.area.name",
    	oa.parent_id AS "office.area.parent.id",
    	oa.parent_ids AS "office.area.parentIds",
    	cu.id AS "company.primaryPerson.id",
    	cu.name AS "company.primaryPerson.name",
    	cu2.id AS "company.deputyPerson.id",
    	cu2.name AS "company.deputyPerson.name",
    	ou.id AS "office.primaryPerson.id",
    	ou.name AS "office.primaryPerson.name",
    	ou2.id AS "office.deputyPerson.id",
    	ou2.name AS "office.deputyPerson.name",
		a.position as "position",
		a.enable as "enable",
		a.positionId as "positionId"
		<!-- ,
        r.id AS "roleList.id",
        r.office_id AS "roleList.office.id",
        r.name AS "roleList.name",
        r.enname AS "roleList.enname",
        r.role_type AS "roleList.roleType",
        r.data_scope AS "roleList.dataScope" -->
    </sql>

    <sql id="userJoins">
		LEFT JOIN sys_office c ON c.id = a.company_id
		LEFT JOIN sys_area ca ON ca.id = c.area_id
		LEFT JOIN sys_office o ON o.id = a.office_id
		LEFT JOIN sys_area oa ON oa.id = o.area_id
		LEFT JOIN sys_user cu ON cu.id = c.primary_person
		LEFT JOIN sys_user cu2 ON cu2.id = c.deputy_person
		LEFT JOIN sys_user ou ON ou.id = o.primary_person
		LEFT JOIN sys_user ou2 ON ou2.id = o.deputy_person<!--
		LEFT JOIN sys_user_role ur ON ur.user_id = a.id
        LEFT JOIN sys_role r ON r.id = ur.role_id -->
    </sql>

    <!-- 根据编号获得用户 -->
	<select id="findQyhUserId" resultType="String">
		SELECT a.qyh_userid
		FROM wx_t_qyhuser a
		WHERE a.kite_userid = #{id}
	</select>

	<!-- 根据编号获得用户 -->
	<select id="get" resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/><!--
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.id = #{id}
	</select>

	<!-- 根据登录名查询用户 -->
	<select id="getByLoginName" resultType="User" parameterType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/><!--
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.login_name = #{loginName} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>

	<!-- 根据名称查询用户 -->
	<select id="getByName" resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/><!--
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.name = #{name} and a.del_flag = '0'
	</select>

	<!-- 根据登录名查询用户 -->
	<select id="getByLoginNameVer" resultType="String">
		SELECT
			a.id
		FROM sys_user a
		WHERE a.login_name = #{name} AND a.del_flag = #{flag}
	</select>

	<!-- 根据qyh_userid获取user_id -->
	<select id="getQyhUserId" resultType="String">
		SELECT a.kite_userid
		FROM wx_t_qyhuser a
		WHERE a.qyh_userid = #{qyhId}
	</select>

	<select id="findUserList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		JOIN sys_organizational organ ON organ.user_id = a.id
		<if test="officeid != null and officeid != ''">
			and organ.office_id = #{officeid}
		</if>
		and organ.organTag = #{organTag}
	</select>


	<!--  通过部门集合查询相关的人员   -->
	<select id="findUsersByOfficeIds" resultType="User">
		SELECT
		<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		JOIN sys_organizational organ ON organ.user_id = a.id
		<if test="officeids != null and  officeids.size >0 ">
			and  organ.office_id  in
			<foreach collection="officeids" item="item" close=")" index="index" open="(" separator=",">
				#{item}
			</foreach>
		</if>
		and  a.del_flag = 0
		and organ.organTag = #{organTag}
		ORDER BY  convert(a.name using gbk) ASC
	</select>


	<!-- 分页查询用户信息 -->
	<select id="findList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		<if test="role != null and role.id != null and role.id != ''">
			JOIN sys_user_role ur ON ur.user_id = a.id AND ur.role_id = #{role.id}
		</if>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}

		<if test="listId != null and listId.size > 0">
			and a.id IN
			<foreach collection="listId" index="index" close=")" open="(" separator="," item="item">
				#{item}
			</foreach>
		</if>

		<if test="company != null and company.id != null and company.id != ''">
			AND (c.id = #{company.id} OR c.parent_ids LIKE
					<if test="dbName == 'oracle'">'%,'||#{company.id}||',%')</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{company.id}, ',%'))</if>
		</if>
		<if test="office != null and office.id != null and office.id != ''">
			AND (o.id = #{office.id} OR o.parent_ids LIKE
					<if test="dbName == 'oracle'">'%,'||#{office.id}||',%')</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{office.id}, ',%'))</if>
		</if>
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<if test="!currentUser.admin">
			AND a.id != '1'
		</if>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like
					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
		<if test="formalFlag != null and formalFlag != ''">
			AND a.formal_flag =
					<if test="dbName == 'oracle'">#{formalFlag}</if>
					<if test="dbName == 'mysql'">#{formalFlag}</if>
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY c.code, o.code, a.name
			</otherwise>
		</choose>
	</select>


	<!-- 根据部门查询用户信息 -->
	<select id="findListByOffice" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>

		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="company != null and company.id != null and company.id != ''">
			AND c.id = #{company.id}
		</if>
		<if test="office != null and office.id != null and office.id != ''">
			AND o.id = #{office.id}
		</if>
		<if test="office == null">
			AND (o.id = ''  or o.id is null)
		</if>

		<if test="loginName != null and loginName != ''">
			AND a.login_name like
					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<!-- 排序 -->
		ORDER BY  a.name

	</select>

	<!-- 根据OfficeId获取用户（树查询用户时用） -->
	<select id="findUserByOfficeId" resultType="User" useCache="true">
		SELECT
			a.id, a.name, a.login_name
		FROM sys_user a
		JOIN sys_organizational organ on organ.user_id = a.id and organ.del_flag = '0' AND organ.office_id = #{office.id}
		WHERE a.del_flag = '0'
		ORDER BY a.name
	</select>

	<!-- 查询全部用户 -->
	<select id="findAllList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY c.code, o.code, a.name
	</select>

	<!-- 查询全部用户数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>

	<!-- 插入用户 -->
	<insert id="insert">
		INSERT INTO sys_user(
			id,
			company_id,
			office_id,
			login_name,
			password,
			no,
			name,
			email,
			phone,
			mobile,
			user_type,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			login_flag,
			formal_flag,
			photo,
			qrcode,
			del_flag,
			tmpPwd,
			tmpPwdCreateDate,
			position,
			enable,
			positionId
		) VALUES (
			#{id},
			#{company.id},
			#{office.id},
			#{loginName},
			#{password},
			#{no},
			#{name},
			#{email},
			#{phone},
			#{mobile},
			#{userType},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{loginFlag},
			#{formalFlag},
			#{photo},
			#{qrCode},
			#{delFlag},
			#{tmpPwd},
			#{tmpPwdCreateDate},
			#{position},
			#{enable},
			#{positionId}
		)
	</insert>

	<!-- 更新用户 -->
	<update id="update">
		UPDATE sys_user SET
			company_id = #{company.id},
			office_id = #{office.id},
			login_name = #{loginName},
			password = #{password},
			no = #{no},
			name = #{name},
			email = #{email},
			phone = #{phone},
			mobile = #{mobile},
			user_type = #{userType},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			login_flag = #{loginFlag},
			formal_flag = #{formalFlag},
			photo = #{photo},
			qrcode = #{qrCode},
			tmpPwd =#{tmpPwd},
			tmpPwdCreateDate=#{tmpPwdCreateDate},
			position=#{position},
			enable=#{enable},
			positionId=#{positionId}
		WHERE id = #{id}
	</update>

	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteUserRole">
		DELETE FROM sys_user_role WHERE user_id = #{id}
	</delete>

	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRole">
		INSERT INTO sys_user_role(user_id, role_id)
		<foreach collection="roleList" item="role" separator=" union all ">
			SELECT #{id}, #{role.id} FROM dual
		</foreach>
	</insert>

	<!-- 更新用户信息  -->
	<update id="updateUserInfo">
		UPDATE sys_user SET
			name = #{name},
			email = #{email},
			phone = #{phone},
			mobile = #{mobile},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			photo = #{photo},
			qrcode = #{qrCode},
			sign = #{sign},
			tmpPwd =#{tmpPwd},
			tmpPwdCreateDate=#{tmpPwdCreateDate},
			positionId=#{position},
			enable=#{enable},
			no = #{no}
		WHERE id = #{id}
	</update>

	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE sys_user SET
			password = #{password}
		WHERE id = #{id}
	</update>

	<!-- 更新登录信息，如登录IP、登录时间 -->
	<update id="updateLoginInfo">
		UPDATE sys_user SET
			login_ip = #{loginIp},
			login_Date = #{loginDate}
		WHERE id = #{id}
	</update>

	<!-- 物理删除用户 -->
	<update id="delete">
		DELETE FROM sys_user
		WHERE id = #{id}
	</update>

	<!-- 逻辑删除用户 -->
	<update id="deleteByLogic">
		UPDATE sys_user SET
			del_flag = #{DEL_FLAG_DELETE},
			update_date=#{updateDate}
		WHERE id = #{id}
	</update>

	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty"  resultType="User" statementType="STATEMENT">
		select * from sys_user where ${propertyName} = '${value}'
	</select>
		<!-- 根据名称查询用户 -->
	<select id="findUserByName"  resultType="User">
		SELECT
			a.id
		FROM sys_user a
		WHERE  a.del_flag=0 and  a.name = #{name}

	</select>

		<!-- 根据条件检索用户，添加到好友列表 -->
	<select id="searchUsers"  resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
	  	<include refid="userJoins"/>
		<if test="name != null and name != ''">
			WHERE  a.name like
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
	</select>

	<!-- 根据名称查询用户 -->
	<select id="findUserByRoleName"  resultType="User">
		SELECT su.* FROM `sys_role` sr
		LEFT JOIN sys_user_role sur on  sr.id =sur.role_id
		LEFT JOIN sys_user su on su.id = sur.user_id
		where sr.`name`=#{roleName}
		and su.del_flag=0
		and sr.del_flag=0
	</select>

	<!-- 根据登录名查询用户 -->
	<select id="getByLoginNameAndEmail" resultType="User" parameterType="User">
		SELECT
		<include refid="userColumns"/>,
		a.tmpPwd ,
		a.tmpPwdCreateDate
		FROM sys_user a
		<include refid="userJoins"/><!--
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.login_name = #{loginName} AND a.del_flag = #{DEL_FLAG_NORMAL}
		AND a.email  =#{email}
	</select>

	<select id="getByPhone" resultType="User" >
		select * from sys_user where del_flag = 0
        <if test="list != null and list.size > 0">
            and phone  in
            <foreach collection="list" item="item" close=")" index="index" open="(" separator=",">
                #{item}
            </foreach>
        </if>
	</select>

	<select id="findUserByIds" resultType="User" >
		select * from sys_user where del_flag = 0
		<if test="list != null and list.size > 0">
			and id  in
			<foreach collection="list" item="item" close=")" index="index" open="(" separator=",">
				#{item}
			</foreach>
		</if>
	</select>

	<select id="getRoleByUserId" resultType="Role">
		select  sr.* from sys_role sr
			left join sys_user_role sur on sur.role_id = sr.id
		where sr.del_flag = 0 and  sur.user_id = #{userId}
	</select>

	<!-- 根据qyh_userid获取user_id -->
	<select id="getQyhUserIdByUserId" resultType="String">
		SELECT a.qyh_userid
		FROM wx_t_qyhuser a
		WHERE a.kite_userid = #{userId}
	</select>

	<!-- 逻辑删除用户 -->
	<update id="updateEmailQyhUser">
		UPDATE wx_t_email_qyhuser SET
		flag=1,emailaccount=#{emailaccount}
		WHERE kite_userid = #{userId}
	</update>

	<!-- 根据qyh_userid获取user_id -->
	<select id="getEmailQyhUser" resultType="String">
		SELECT flag
		FROM wx_t_email_qyhuser
		WHERE kite_userid=#{userId}
	</select>
	<!-- 根据qyh_userid获取user_id -->
	<select id="getPasswordEmailQyhUser" resultType="String">
		SELECT password
		FROM wx_t_email_qyhuser
		WHERE kite_userid=#{userId}
	</select>

	<select id="getTencentEmailPassword" resultType="String">
		select concat(
		 substring('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' , FLOOR(1 + RAND()*62 ),1),
		 substring('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' , FLOOR(1 + RAND()*62 ),1),
		 substring('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' , FLOOR(1 + RAND()*62 ),1),
		 substring('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' , FLOOR(1 + RAND()*62 ),1),
		 substring('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' , FLOOR(1 + RAND()*62 ),1),
		 substring('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' , FLOOR(1 + RAND()*62 ),1),
		 substring('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' , FLOOR(1 + RAND()*62 ),1),
		 substring('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' , FLOOR(1 + RAND()*62 ),1),
		 substring('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' , FLOOR(1 + RAND()*62 ),1),
		 substring('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' , FLOOR(1 + RAND()*62 ),1),
		 substring('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' , FLOOR(1 + RAND()*62 ),1),
		 substring('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' , FLOOR(1 + RAND()*62 ),1)
		) from DUAL
	</select>

	<!-- 物理删除用户 -->
	<update id="deleteQyhUser">
		DELETE FROM wx_t_qyhuser
		WHERE qyh_userid = #{qywxUserId}
	</update>

	<select id="getUserCountByOfficeId" resultType="int">
		select count(1) from sys_office s
		INNER JOIN sys_organizational ss on (s.id = ss.office_id or s.id=ss.company_id or s.id=ss.office_one_id)
		where s.organTag=1 and s.del_flag=0 and ss.del_flag=0  and s.id=#{officeId}
	</select>


	<select id="findNoSelectList" resultType="User">
		SELECT
		<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		LEFT JOIN sys_organizational so  on a.id = so.user_id and so.organTag=#{organTag}
		where a.del_flag=0 and so.id is null

	</select>

	<select id="findAllSelectList" resultType="User">
		SELECT
		a.id,
		a.`name`
		FROM sys_user a
		where a.del_flag=0
	</select>

	<select id="getCountByUserId" resultType="int">
		SELECT COUNT(1)
		FROM sys_user a
		INNER JOIN sys_organizational so  on a.id = so.user_id and so.organTag=1
		where a.del_flag=0 and a.id=#{userId}
	</select>

	<select id="findAllEffectiveUserNum" resultType="int">
		SELECT COUNT(1)
		FROM sys_user a
		where a.del_flag=0
	</select>

	<!-- 使其成为正式员工 -->
	<update id="ehrValidLogin">
		UPDATE sys_user SET
			login_flag = "1",
			del_flag = "0",
			enable = "1",
			password = #{password},
			email = #{email}
		WHERE
			id = #{userId}
	</update>

	<select id="selectUserByPhoneAndName" resultType="User">
		SELECT
		<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE
			a.login_name = #{phone}
		AND a.`name` = #{name}
	</select>

</mapper>