<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kite.modules.datasources.dao.DataSourceConfigDao">
    
	<sql id="dataSourceConfigColumns">
		a.id AS "id",
		a.uid AS "uid",
		a.name AS "name",
		a.jdbc_url AS "jdbcUrl",
		a.user AS "user",
		a.password AS "password",
		a.data_type AS "dataType",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.status as "status"
	</sql>
	
	<sql id="dataSourceConfigJoins">
	</sql>
	
    
	<select id="get" resultType="DataSourceConfig" >
		SELECT 
			<include refid="dataSourceConfigColumns"/>
		FROM data_source_config a
		<include refid="dataSourceConfigJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="DataSourceConfig" >
		SELECT 
			<include refid="dataSourceConfigColumns"/>
		FROM data_source_config a
		<include refid="dataSourceConfigJoins"/>
		<where>
			
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="DataSourceConfig" >
		SELECT 
			<include refid="dataSourceConfigColumns"/>
		FROM data_source_config a
		<include refid="dataSourceConfigJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO data_source_config(
			id,
			uid,
			name,
			jdbc_url,
			user,
			password,
			data_type,
			create_by,
			create_date,
			update_date,
			status
		) VALUES (
			#{id},
			#{uid},
			#{name},
			#{jdbcUrl},
			#{user},
			#{password},
			#{dataType},
			#{createBy.id},
			#{createDate},
			#{updateDate},
			#{status}
		)
	</insert>
	
	<update id="update">
		UPDATE data_source_config SET 	
			uid = #{uid},
			name = #{name},
			jdbc_url = #{jdbcUrl},
			user = #{user},
			password = #{password},
			data_type = #{dataType},
			update_date = #{updateDate},
			status= #{status}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM data_source_config
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE data_source_config SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="DataSourceConfig" statementType="STATEMENT">
		select * FROM data_source_config  where ${propertyName} = '${value}'
	</select>
	
</mapper>