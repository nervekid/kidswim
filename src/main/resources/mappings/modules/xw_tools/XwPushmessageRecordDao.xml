<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kite.modules.xw_tools.dao.XwPushmessageRecordDao">
    
	<sql id="xwPushmessageRecordColumns">
		a.id AS "id",
		a.pushmeaasge_id AS "pushmeaasgeId.id",
		a.user_id AS "user.id",
		a.read_flag AS "readFlag",
		a.read_date AS "readDate",
		user.name AS "user.name",
		o.name AS "user.office.name"
	</sql>
	
	<sql id="xwPushmessageRecordJoins">
		LEFT JOIN xw_pushmessage b ON b.id = a.pushmeaasge_id
		LEFT JOIN sys_user user ON user.id = a.user_id
		JOIN sys_office o ON o.id = user.office_id
	</sql>
	
    
	<select id="get" resultType="XwPushmessageRecord" >
		SELECT 
			<include refid="xwPushmessageRecordColumns"/>
		FROM xw_pushmessage_record a
		<include refid="xwPushmessageRecordJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="XwPushmessageRecord" >
		SELECT 
			<include refid="xwPushmessageRecordColumns"/>
		FROM xw_pushmessage_record a
		<include refid="xwPushmessageRecordJoins"/>
		<where>
			<if test="pushmeaasgeId != null and pushmeaasgeId.id != null and pushmeaasgeId.id != ''">
				AND pushmeaasge_id = #{pushmeaasgeId.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="XwPushmessageRecord" >
		SELECT 
			<include refid="xwPushmessageRecordColumns"/>
		FROM xw_pushmessage_record a
		<include refid="xwPushmessageRecordJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO xw_pushmessage_record(
			id,
			pushmeaasge_id,
			user_id,
			read_flag,
			read_date
		) VALUES (
			#{id},
			#{pushmeaasgeId.id},
			#{user.id},
			#{readFlag},
			#{readDate}
		)
	</insert>
	
	<!--<update id="update">
		UPDATE xw_pushmessage_record SET 	
			pushmeaasge_id = #{pushmeaasgeId.id},
			user_id = #{user.id},
			read_flag = #{readFlag},
			read_date = #{readDate}
		WHERE id = #{id}
	</update>-->

	<update id="update">
		UPDATE xw_pushmessage_record SET
		READ_FLAG = #{readFlag},
		READ_DATE = #{readDate}
		WHERE pushmeaasge_id = #{pushmeaasgeId.id}
		AND USER_ID = #{user.id}
		AND READ_FLAG != '1'
	</update>
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM xw_pushmessage_record
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE xw_pushmessage_record SET 
			del_flag = #{DEL_FLAG_DELETE}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="XwPushmessageRecord" statementType="STATEMENT">
		select * FROM xw_pushmessage_record  where ${propertyName} = '${value}'
	</select>

</mapper>